<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Kenwolverine</title>
    <link>https://kenwolverine1.github.io/</link>
    <description>Recent content on Kenwolverine</description>
    <generator>Hugo -- 0.147.0</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 08 May 2025 10:42:02 +0530</lastBuildDate>
    <atom:link href="https://kenwolverine1.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Life calendar widget log4</title>
      <link>https://kenwolverine1.github.io/posts/life_calendar_widget_log4/</link>
      <pubDate>Thu, 08 May 2025 10:42:02 +0530</pubDate>
      <guid>https://kenwolverine1.github.io/posts/life_calendar_widget_log4/</guid>
      <description>&lt;h2 id=&#34;log-4-&#34;&gt;log 4:-&lt;/h2&gt;
&lt;h2 id=&#34;bundling-the-project-as-a-distributable-&#34;&gt;Bundling the project as a distributable:-&lt;/h2&gt;
&lt;p&gt;Now electron doesn&amp;rsquo;t have any tools for packaging and bundling in it&amp;rsquo;s default core modules so, we need to install additional tools to create a packaged app that we can distribute to users either as a installer(MSI on windows) or portable executable file(.app on mac os) or as packages(snap,RPM,deb for multiple linux environments)&lt;/p&gt;
&lt;p&gt;There are two ways to build the electron application by using &lt;code&gt;electron-forge&lt;/code&gt; and &lt;code&gt;electron-builder&lt;/code&gt;. I am going to use &lt;code&gt;electron-forge&lt;/code&gt; since it is easy to create a bundle and it&amp;rsquo;s is used in the official Docs but feel free to use what you prefer.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Life calendar widget log3</title>
      <link>https://kenwolverine1.github.io/posts/life_calendar_widget_log3/</link>
      <pubDate>Tue, 06 May 2025 12:32:45 +0530</pubDate>
      <guid>https://kenwolverine1.github.io/posts/life_calendar_widget_log3/</guid>
      <description>&lt;h2 id=&#34;log-3-&#34;&gt;log 3:-&lt;/h2&gt;
&lt;p&gt;I was facing an error when I run my electron app which displays &lt;code&gt;object Nodelist&lt;/code&gt; instead of the actual value recieved from the input of the form. It turns out that since i am using &lt;code&gt;getElementsbyName&lt;/code&gt; which will return node list instead of the object&lt;/p&gt;
&lt;p&gt;solved the error by adding index value to the nodelist&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;getElementsbyName&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;age&amp;#39;&lt;/span&gt;)[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;].&lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;but when I tried to use &lt;code&gt;getElementbyId&lt;/code&gt; the electron app does nothing and I need to find out why because when I use &lt;code&gt;getElementsbyName&lt;/code&gt; it works as expected without errors.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Life calendar widget log2</title>
      <link>https://kenwolverine1.github.io/posts/life_calendar_widget_log2/</link>
      <pubDate>Sat, 03 May 2025 21:23:57 +0530</pubDate>
      <guid>https://kenwolverine1.github.io/posts/life_calendar_widget_log2/</guid>
      <description>&lt;h2 id=&#34;log-2-&#34;&gt;log 2:-&lt;/h2&gt;
&lt;h2 id=&#34;configuring-uiuser-interface-&#34;&gt;Configuring UI(User Interface):-&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;The User Interface in electron works just like any other websites but in a more traditional way. we need to create a browser window in order to view our UI.for that we can use &lt;code&gt;BrowserWindow&lt;/code&gt; from electron.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Create your &lt;code&gt;index.html&lt;/code&gt; based on your preferences or you can use my &lt;code&gt;index.html&lt;/code&gt; which i have created for the &lt;code&gt;life-calendar-widget&lt;/code&gt;.This project requires you to answer few questions which was made by referencing and combining various concepts and techniques which we will discuss in detail later in the upcoming logs&lt;/p&gt;</description>
    </item>
    <item>
      <title>Life calendar widget project log1</title>
      <link>https://kenwolverine1.github.io/posts/life_calendar_widget_project_log1/</link>
      <pubDate>Thu, 01 May 2025 21:18:56 +0530</pubDate>
      <guid>https://kenwolverine1.github.io/posts/life_calendar_widget_project_log1/</guid>
      <description>&lt;h1 id=&#34;learning-log-&#34;&gt;Learning log!:-&lt;/h1&gt;
&lt;p&gt;As the name suggests this is where i will log the learnings and experiences that i have obtained during the journey of creating this wonderful project so that evenyone can access not only my project but also the learnings and experiences as well!!&lt;/p&gt;
&lt;h2 id=&#34;log-1-&#34;&gt;log 1:-&lt;/h2&gt;
&lt;h2 id=&#34;setting-up-the-project-&#34;&gt;Setting up the project:-&lt;/h2&gt;
&lt;p&gt;I initially started the project by creating a directory under the name life-caledar-widget. I usually create a directory based on the project name in order to initialize it locally and in order to keep track of it&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
